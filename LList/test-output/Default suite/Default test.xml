<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-LVRSBAA" ignored="0" tests="232" failures="5" timestamp="04 янв 2017 12:08:50 GMT" time="2.747" errors="0">
  <testcase name="testAddEnd_to0" time="0.099" classname="EListTestNG"/>
  <testcase name="testAddEnd_to0" time="0.012" classname="EListTestNG"/>
  <testcase name="testAddEnd_to1" time="0.002" classname="EListTestNG"/>
  <testcase name="testAddEnd_to1" time="0.003" classname="EListTestNG"/>
  <testcase name="testAddEnd_to2" time="0.002" classname="EListTestNG"/>
  <testcase name="testAddEnd_to2" time="0.002" classname="EListTestNG"/>
  <testcase name="testAddEnd_to3" time="0.007" classname="EListTestNG"/>
  <testcase name="testAddEnd_to3" time="0.007" classname="EListTestNG"/>
  <testcase name="testAddEnd_tomany" time="0.016" classname="EListTestNG"/>
  <testcase name="testAddEnd_tomany" time="0.005" classname="EListTestNG"/>
  <testcase name="testAddPos_1" time="0.003" classname="EListTestNG"/>
  <testcase name="testAddPos_1" time="0.002" classname="EListTestNG"/>
  <testcase name="testAddPos_2" time="0.006" classname="EListTestNG"/>
  <testcase name="testAddPos_2" time="0.007" classname="EListTestNG"/>
  <testcase name="testAddPos_3" time="0.005" classname="EListTestNG"/>
  <testcase name="testAddPos_3" time="0.005" classname="EListTestNG"/>
  <testcase name="testAddPos_lessthanLeng" time="0.002" classname="EListTestNG"/>
  <testcase name="testAddPos_lessthanLeng" time="0.002" classname="EListTestNG"/>
  <testcase name="testAddPos_many" time="0.002" classname="EListTestNG"/>
  <testcase name="testAddPos_many" time="0.002" classname="EListTestNG"/>
  <testcase name="testAddPos_manyInBeg" time="0.004" classname="EListTestNG"/>
  <testcase name="testAddPos_manyInBeg" time="0.011" classname="EListTestNG"/>
  <testcase name="testAddPos_manyInEnd" time="0.002" classname="EListTestNG"/>
  <testcase name="testAddPos_manyInEnd" time="0.002" classname="EListTestNG"/>
  <testcase name="testAddPos_moreThanleng" time="0.004" classname="EListTestNG"/>
  <testcase name="testAddPos_moreThanleng" time="0.002" classname="EListTestNG"/>
  <testcase name="testAddStart_to0" time="0.001" classname="EListTestNG"/>
  <testcase name="testAddStart_to0" time="0.002" classname="EListTestNG"/>
  <testcase name="testAddStart_to1" time="0.001" classname="EListTestNG"/>
  <testcase name="testAddStart_to1" time="0.001" classname="EListTestNG"/>
  <testcase name="testAddStart_to2" time="0.003" classname="EListTestNG"/>
  <testcase name="testAddStart_to2" time="0.006" classname="EListTestNG"/>
  <testcase name="testAddStart_to3" time="0.002" classname="EListTestNG"/>
  <testcase name="testAddStart_to3" time="0.001" classname="EListTestNG"/>
  <testcase name="testAddStart_toMany" time="0.005" classname="EListTestNG"/>
  <testcase name="testAddStart_toMany" time="0.002" classname="EListTestNG"/>
  <testcase name="testClear_len1" time="0.001" classname="EListTestNG"/>
  <testcase name="testClear_len1" time="0.001" classname="EListTestNG"/>
  <testcase name="testClear_len2" time="0.003" classname="EListTestNG"/>
  <testcase name="testClear_len2" time="0.001" classname="EListTestNG"/>
  <testcase name="testClear_many" time="0.003" classname="EListTestNG"/>
  <testcase name="testClear_many" time="0.004" classname="EListTestNG"/>
  <testcase name="testClear_zerolen" time="0.002" classname="EListTestNG"/>
  <testcase name="testClear_zerolen" time="0.002" classname="EListTestNG"/>
  <testcase name="testDelEnd_from0" time="0.002" classname="EListTestNG"/>
  <testcase name="testDelEnd_from0" time="0.002" classname="EListTestNG"/>
  <testcase name="testDelEnd_from1" time="0.002" classname="EListTestNG"/>
  <testcase name="testDelEnd_from1" time="0.002" classname="EListTestNG"/>
  <testcase name="testDelEnd_from2" time="0.004" classname="EListTestNG">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at LList1.delEnd(LList1.java:111)
	at EListTestNG.testDelEnd_from2(EListTestNG.java:473)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
    </failure>
  </testcase> <!-- testDelEnd_from2 -->
  <testcase name="testDelEnd_from2" time="0.003" classname="EListTestNG"/>
  <testcase name="testDelEnd_from3" time="0.002" classname="EListTestNG">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at LList1.delEnd(LList1.java:111)
	at EListTestNG.testDelEnd_from3(EListTestNG.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
    </failure>
  </testcase> <!-- testDelEnd_from3 -->
  <testcase name="testDelEnd_from3" time="0.002" classname="EListTestNG"/>
  <testcase name="testDelEnd_fromMany" time="0.002" classname="EListTestNG">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at LList1.getNode(LList1.java:182)
	at LList1.delEnd(LList1.java:112)
	at EListTestNG.testDelEnd_fromMany(EListTestNG.java:497)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
    </failure>
  </testcase> <!-- testDelEnd_fromMany -->
  <testcase name="testDelEnd_fromMany" time="0.002" classname="EListTestNG"/>
  <testcase name="testDelPos_beg" time="0.003" classname="EListTestNG"/>
  <testcase name="testDelPos_beg" time="0.002" classname="EListTestNG"/>
  <testcase name="testDelPos_end" time="0.002" classname="EListTestNG">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at LList1.getNode(LList1.java:182)
	at LList1.delEnd(LList1.java:112)
	at LList1.delPos(LList1.java:289)
	at EListTestNG.testDelPos_end(EListTestNG.java:1081)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
    </failure>
  </testcase> <!-- testDelPos_end -->
  <testcase name="testDelPos_end" time="0.004" classname="EListTestNG"/>
  <testcase name="testDelPos_from0" time="0.002" classname="EListTestNG"/>
  <testcase name="testDelPos_from0" time="0.001" classname="EListTestNG"/>
  <testcase name="testDelPos_from1" time="0.003" classname="EListTestNG"/>
  <testcase name="testDelPos_from1" time="0.004" classname="EListTestNG"/>
  <testcase name="testDelPos_from2" time="0.003" classname="EListTestNG">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at LList1.delEnd(LList1.java:111)
	at LList1.delPos(LList1.java:289)
	at EListTestNG.testDelPos_from2(EListTestNG.java:1045)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
    </failure>
  </testcase> <!-- testDelPos_from2 -->
  <testcase name="testDelPos_from2" time="0.004" classname="EListTestNG"/>
  <testcase name="testDelPos_manymiddle" time="0.003" classname="EListTestNG"/>
  <testcase name="testDelPos_manymiddle" time="0.002" classname="EListTestNG"/>
  <testcase name="testDelPos_oneafterbeg" time="0.002" classname="EListTestNG"/>
  <testcase name="testDelPos_oneafterbeg" time="0.001" classname="EListTestNG"/>
  <testcase name="testDelPos_onebeforeend" time="0.008" classname="EListTestNG"/>
  <testcase name="testDelPos_onebeforeend" time="0.001" classname="EListTestNG"/>
  <testcase name="testDelStart_from0" time="0.002" classname="EListTestNG"/>
  <testcase name="testDelStart_from0" time="0.001" classname="EListTestNG"/>
  <testcase name="testDelStart_from1" time="0.001" classname="EListTestNG"/>
  <testcase name="testDelStart_from1" time="0.002" classname="EListTestNG"/>
  <testcase name="testDelStart_from2" time="0.001" classname="EListTestNG"/>
  <testcase name="testDelStart_from2" time="0.001" classname="EListTestNG"/>
  <testcase name="testDelStart_from3" time="0.001" classname="EListTestNG"/>
  <testcase name="testDelStart_from3" time="0.001" classname="EListTestNG"/>
  <testcase name="testDelStart_fromMany" time="0.099" classname="EListTestNG"/>
  <testcase name="testDelStart_fromMany" time="0.004" classname="EListTestNG"/>
  <testcase name="testGet_LessThanleng" time="0.002" classname="EListTestNG"/>
  <testcase name="testGet_LessThanleng" time="0.001" classname="EListTestNG"/>
  <testcase name="testGet_end" time="0.121" classname="EListTestNG"/>
  <testcase name="testGet_end" time="0.002" classname="EListTestNG"/>
  <testcase name="testGet_from0" time="0.002" classname="EListTestNG"/>
  <testcase name="testGet_from0" time="0.002" classname="EListTestNG"/>
  <testcase name="testGet_from1" time="0.004" classname="EListTestNG"/>
  <testcase name="testGet_from1" time="0.002" classname="EListTestNG"/>
  <testcase name="testGet_from2" time="0.003" classname="EListTestNG"/>
  <testcase name="testGet_from2" time="0.002" classname="EListTestNG"/>
  <testcase name="testGet_middle" time="0.001" classname="EListTestNG"/>
  <testcase name="testGet_middle" time="0.002" classname="EListTestNG"/>
  <testcase name="testGet_moreThanLeng" time="0.01" classname="EListTestNG"/>
  <testcase name="testGet_moreThanLeng" time="0.003" classname="EListTestNG"/>
  <testcase name="testGet_start" time="0.001" classname="EListTestNG"/>
  <testcase name="testGet_start" time="0.001" classname="EListTestNG"/>
  <testcase name="testGet_zero" time="0.003" classname="EListTestNG"/>
  <testcase name="testGet_zero" time="0.001" classname="EListTestNG"/>
  <testcase name="testHalfReverse_0" time="0.001" classname="EListTestNG"/>
  <testcase name="testHalfReverse_0" time="0.001" classname="EListTestNG"/>
  <testcase name="testHalfReverse_1" time="0.002" classname="EListTestNG"/>
  <testcase name="testHalfReverse_1" time="0.002" classname="EListTestNG"/>
  <testcase name="testHalfReverse_2" time="0.002" classname="EListTestNG"/>
  <testcase name="testHalfReverse_2" time="0.001" classname="EListTestNG"/>
  <testcase name="testHalfReverse_manyOdd" time="0.002" classname="EListTestNG"/>
  <testcase name="testHalfReverse_manyOdd" time="0.001" classname="EListTestNG"/>
  <testcase name="testHalfReverse_manyeven" time="0.002" classname="EListTestNG"/>
  <testcase name="testHalfReverse_manyeven" time="0.001" classname="EListTestNG"/>
  <testcase name="testInit_len1" time="0.001" classname="EListTestNG"/>
  <testcase name="testInit_len1" time="0.014" classname="EListTestNG"/>
  <testcase name="testInit_len2" time="0.002" classname="EListTestNG"/>
  <testcase name="testInit_len2" time="0.006" classname="EListTestNG"/>
  <testcase name="testInit_len3" time="0.001" classname="EListTestNG"/>
  <testcase name="testInit_len3" time="0.002" classname="EListTestNG"/>
  <testcase name="testInit_many" time="0.003" classname="EListTestNG"/>
  <testcase name="testInit_many" time="0.008" classname="EListTestNG"/>
  <testcase name="testInit_zerolen" time="0.002" classname="EListTestNG"/>
  <testcase name="testInit_zerolen" time="0.002" classname="EListTestNG"/>
  <testcase name="testMaxPos_1" time="0.002" classname="EListTestNG"/>
  <testcase name="testMaxPos_1" time="0.003" classname="EListTestNG"/>
  <testcase name="testMaxPos_2" time="0.002" classname="EListTestNG"/>
  <testcase name="testMaxPos_2" time="0.001" classname="EListTestNG"/>
  <testcase name="testMaxPos_3" time="0.001" classname="EListTestNG"/>
  <testcase name="testMaxPos_3" time="0.003" classname="EListTestNG"/>
  <testcase name="testMaxPos_many" time="0.001" classname="EListTestNG"/>
  <testcase name="testMaxPos_many" time="0.002" classname="EListTestNG"/>
  <testcase name="testMaxPos_manyAllTheSame" time="0.004" classname="EListTestNG"/>
  <testcase name="testMaxPos_manyAllTheSame" time="0.002" classname="EListTestNG"/>
  <testcase name="testMaxPos_zero" time="0.003" classname="EListTestNG"/>
  <testcase name="testMaxPos_zero" time="0.002" classname="EListTestNG"/>
  <testcase name="testMax_0" time="0.002" classname="EListTestNG"/>
  <testcase name="testMax_0" time="0.002" classname="EListTestNG"/>
  <testcase name="testMax_1" time="0.001" classname="EListTestNG"/>
  <testcase name="testMax_1" time="0.004" classname="EListTestNG"/>
  <testcase name="testMax_2" time="0.002" classname="EListTestNG"/>
  <testcase name="testMax_2" time="0.004" classname="EListTestNG"/>
  <testcase name="testMax_3" time="0.002" classname="EListTestNG"/>
  <testcase name="testMax_3" time="0.014" classname="EListTestNG"/>
  <testcase name="testMax_many" time="0.002" classname="EListTestNG"/>
  <testcase name="testMax_many" time="0.002" classname="EListTestNG"/>
  <testcase name="testMax_manyAllTheSame" time="0.001" classname="EListTestNG"/>
  <testcase name="testMax_manyAllTheSame" time="0.002" classname="EListTestNG"/>
  <testcase name="testMinPos_0" time="0.001" classname="EListTestNG"/>
  <testcase name="testMinPos_0" time="0.001" classname="EListTestNG"/>
  <testcase name="testMinPos_1" time="0.001" classname="EListTestNG"/>
  <testcase name="testMinPos_1" time="0.004" classname="EListTestNG"/>
  <testcase name="testMinPos_2" time="0.002" classname="EListTestNG"/>
  <testcase name="testMinPos_2" time="0.002" classname="EListTestNG"/>
  <testcase name="testMinPos_3" time="0.001" classname="EListTestNG"/>
  <testcase name="testMinPos_3" time="0.004" classname="EListTestNG"/>
  <testcase name="testMinPos_allthesame" time="0.001" classname="EListTestNG"/>
  <testcase name="testMinPos_allthesame" time="0.001" classname="EListTestNG"/>
  <testcase name="testMinPos_many" time="0.001" classname="EListTestNG"/>
  <testcase name="testMinPos_many" time="0.001" classname="EListTestNG"/>
  <testcase name="testMinPos_many_fewMins" time="0.001" classname="EListTestNG"/>
  <testcase name="testMinPos_many_fewMins" time="0.002" classname="EListTestNG"/>
  <testcase name="testMin_0" time="0.001" classname="EListTestNG"/>
  <testcase name="testMin_0" time="0.001" classname="EListTestNG"/>
  <testcase name="testMin_1" time="0.002" classname="EListTestNG"/>
  <testcase name="testMin_1" time="0.001" classname="EListTestNG"/>
  <testcase name="testMin_2" time="0.002" classname="EListTestNG"/>
  <testcase name="testMin_2" time="0.001" classname="EListTestNG"/>
  <testcase name="testMin_3" time="0.001" classname="EListTestNG"/>
  <testcase name="testMin_3" time="0.002" classname="EListTestNG"/>
  <testcase name="testMin_allthesame" time="0.001" classname="EListTestNG"/>
  <testcase name="testMin_allthesame" time="0.002" classname="EListTestNG"/>
  <testcase name="testMin_many" time="0.002" classname="EListTestNG"/>
  <testcase name="testMin_many" time="0.004" classname="EListTestNG"/>
  <testcase name="testReverse_0" time="0.064" classname="EListTestNG"/>
  <testcase name="testReverse_0" time="0.003" classname="EListTestNG"/>
  <testcase name="testReverse_1" time="0.001" classname="EListTestNG"/>
  <testcase name="testReverse_1" time="0.001" classname="EListTestNG"/>
  <testcase name="testReverse_2" time="0.001" classname="EListTestNG"/>
  <testcase name="testReverse_2" time="0.001" classname="EListTestNG"/>
  <testcase name="testReverse_manyEven" time="0.002" classname="EListTestNG"/>
  <testcase name="testReverse_manyEven" time="0.003" classname="EListTestNG"/>
  <testcase name="testReverse_manyOdd" time="0.001" classname="EListTestNG"/>
  <testcase name="testReverse_manyOdd" time="0.005" classname="EListTestNG"/>
  <testcase name="testSet_beginning" time="0.001" classname="EListTestNG"/>
  <testcase name="testSet_beginning" time="0.001" classname="EListTestNG"/>
  <testcase name="testSet_end" time="0.085" classname="EListTestNG"/>
  <testcase name="testSet_end" time="0.001" classname="EListTestNG"/>
  <testcase name="testSet_lessThan" time="0.001" classname="EListTestNG"/>
  <testcase name="testSet_lessThan" time="0.001" classname="EListTestNG"/>
  <testcase name="testSet_mid" time="0.038" classname="EListTestNG"/>
  <testcase name="testSet_mid" time="0.002" classname="EListTestNG"/>
  <testcase name="testSet_moreThan" time="0.005" classname="EListTestNG"/>
  <testcase name="testSet_moreThan" time="0.005" classname="EListTestNG"/>
  <testcase name="testSet_whenLeng1" time="0.001" classname="EListTestNG"/>
  <testcase name="testSet_whenLeng1" time="0.001" classname="EListTestNG"/>
  <testcase name="testSet_whenleng0" time="0.008" classname="EListTestNG"/>
  <testcase name="testSet_whenleng0" time="0.035" classname="EListTestNG"/>
  <testcase name="testSize_1" time="0.034" classname="EListTestNG"/>
  <testcase name="testSize_1" time="0.001" classname="EListTestNG"/>
  <testcase name="testSize_2" time="0.001" classname="EListTestNG"/>
  <testcase name="testSize_2" time="0.005" classname="EListTestNG"/>
  <testcase name="testSize_3" time="0.001" classname="EListTestNG"/>
  <testcase name="testSize_3" time="0.002" classname="EListTestNG"/>
  <testcase name="testSize_many" time="0.001" classname="EListTestNG"/>
  <testcase name="testSize_many" time="0.002" classname="EListTestNG"/>
  <testcase name="testSize_zero" time="0.001" classname="EListTestNG"/>
  <testcase name="testSize_zero" time="0.0" classname="EListTestNG"/>
  <testcase name="testSort_0" time="0.001" classname="EListTestNG"/>
  <testcase name="testSort_0" time="0.001" classname="EListTestNG"/>
  <testcase name="testSort_1" time="0.001" classname="EListTestNG"/>
  <testcase name="testSort_1" time="0.002" classname="EListTestNG"/>
  <testcase name="testSort_2" time="0.001" classname="EListTestNG"/>
  <testcase name="testSort_2" time="0.001" classname="EListTestNG"/>
  <testcase name="testSort_even" time="0.001" classname="EListTestNG"/>
  <testcase name="testSort_even" time="0.001" classname="EListTestNG"/>
  <testcase name="testSort_manyOdd" time="0.002" classname="EListTestNG"/>
  <testcase name="testSort_manyOdd" time="0.002" classname="EListTestNG"/>
  <testcase name="testToArray_1" time="0.001" classname="EListTestNG"/>
  <testcase name="testToArray_1" time="0.006" classname="EListTestNG"/>
  <testcase name="testToArray_2" time="0.001" classname="EListTestNG"/>
  <testcase name="testToArray_2" time="0.003" classname="EListTestNG"/>
  <testcase name="testToArray_3" time="0.002" classname="EListTestNG"/>
  <testcase name="testToArray_3" time="0.001" classname="EListTestNG"/>
  <testcase name="testToArray_many" time="0.001" classname="EListTestNG"/>
  <testcase name="testToArray_many" time="0.003" classname="EListTestNG"/>
  <testcase name="testToArray_zero" time="0.001" classname="EListTestNG"/>
  <testcase name="testToArray_zero" time="0.001" classname="EListTestNG"/>
  <testcase name="testToString_1" time="0.001" classname="EListTestNG"/>
  <testcase name="testToString_1" time="0.015" classname="EListTestNG"/>
  <testcase name="testToString_2" time="0.003" classname="EListTestNG"/>
  <testcase name="testToString_2" time="0.001" classname="EListTestNG"/>
  <testcase name="testToString_3" time="0.001" classname="EListTestNG"/>
  <testcase name="testToString_3" time="0.019" classname="EListTestNG"/>
  <testcase name="testToString_many" time="0.001" classname="EListTestNG"/>
  <testcase name="testToString_many" time="0.003" classname="EListTestNG"/>
  <testcase name="testToString_zero" time="0.002" classname="EListTestNG"/>
  <testcase name="testToString_zero" time="0.001" classname="EListTestNG"/>
</testsuite>

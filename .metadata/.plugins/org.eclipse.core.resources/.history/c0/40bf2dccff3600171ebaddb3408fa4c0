package clientserver;

import java.awt.Color;
import java.awt.Component;
import java.awt.Rectangle;
import java.io.DataInputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.ArrayList;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import frame.Figure;
import frame.RMFrame;
import frame.RMPanel;
import model.MFigure;
import model.RMData;

public class ClientReader extends Thread
{
	DataInputStream read;
	RMFrame mainFrame;
	Gson json = new Gson();
	public ClientReader(Socket sock, RMFrame mainFrame)
	{
		this.mainFrame = mainFrame;
		try
		{
			read = new DataInputStream(sock.getInputStream());
		} 
		catch (IOException e)
		{
			e.printStackTrace();
		}
		start();
	}

	@Override
	public void run()
	{
		try
		{

			String line;
			sleep(100);
			line = read.readUTF();
			if(!line.equals(""))
			{
				System.out.println(line);
				mainFrame.rmp.setMemento(json.fromJson(line, new TypeToken<ArrayList<MFigure>>(){}.getType()));
			}
			while(true)
			{
				RMPanel rmp = mainFrame.rmp;
				
				line = read.readUTF();
				MFigure fig = json.fromJson(line, MFigure.class);
				Rectangle r = new Rectangle(fig.x, fig.y, fig.width, fig.height);
				RMData data = new RMData(fig.stroke, fig.type, new Color(fig.color), fig.number);
				rmp.data.number = fig.number;
				Figure figure = new Figure(r, data, mainFrame.rmc);
				
				for (Component comp : rmp.getComponents())
				{
					if(figurra.equals(fig))
					{
						return;
					}
				}
				rmp.add(figure);

				rmp.repaint();
			}
		}			
		catch (IOException | InterruptedException e)
		{
			stop();
			e.printStackTrace();
		}
	}
}

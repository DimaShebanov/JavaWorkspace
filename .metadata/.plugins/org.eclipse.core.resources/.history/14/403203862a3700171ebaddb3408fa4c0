package server;

import java.util.ArrayList;

import com.google.gson.Gson;

import client.model.MFigure;

public class ServerSender extends Thread
{
	ArrayList<SClient> clients;
	ArrayList<String> msg;
	ArrayList<MFigure> figs;
	ArrayList<SRoom> rooms;
	PictureIO pio;
	Gson json = new Gson();

	public ServerSender(ArrayList<SClient> clients, ArrayList<String> msg, ArrayList<MFigure> figs,ArrayList<SRoom> rooms, PictureIO pio)
	{
		this.rooms = rooms;
		this.msg = msg;
		this.clients = clients;
		this.figs = figs;
		this.pio = pio;
		start();
	}

	@Override
	public void run()
	{
		try
		{
			while(true)
			{
				for (String specMSG : msg)
				{
					String specContent = specMSG.substring(specMSG.indexOf(":") + 1);
				
					if(specMSG.startsWith("new client:"))
					{
						sendRooms(Integer.parseInt(specContent));
					}
					if(specMSG.startsWith("create room:"))
					{
						createRoom(specContent);
					}
					if(specMSG.startsWith("leave room:"))
					{
						leaveRoom(Integer.parseInt(specContent));
					}
					if(specMSG.startsWith("exit:"))
					{
						deleteClient(Integer.parseInt(specContent));
					}
					
				}
			}
		} catch (Exception e)
		{
			e.printStackTrace();
		}
	}


	private void createRoom(String roomName)
	{
		SRoom newRoom = null;

		for (SRoom room : rooms)
		{
			if(room.name.equals(roomName))
			{
				newRoom = room;
			}
		}
		if(newRoom == null)
		{
			newRoom = new SRoom(roomName);
			rooms.add(newRoom);
		}
	}

	private void deleteClient(int clientID)
	{
		SClient clientToRemove = null;
		for (SClient client : clients)
		{
			if(client.id == clientID)
			{
				clientToRemove = client;
				break;
			}
		}
		if (clientToRemove != null)
		{
			leaveRoom(clientID);
			clients.remove(clientToRemove);
		}
	}

	private void leaveRoom(int clientID)
	{
		for (SClient client : clients)
		{
			if(client.id == clientID)
			{
				for (SRoom room : rooms)
				{
					if(room.roomClients.contains(client))
					{
						room.roomClients.remove(client);
						return;
					}
				}
			}
		}
	}

	private void sendRooms(int newClientID)
	{
		if(figs.size() > 1)
		{
			for (SClient client : clients)
			{
				if(client.id == newClientID)
				{
					client.send(json.toJson(figs));
				}
			}
		}
	}

}

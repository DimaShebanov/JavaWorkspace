package server;

import java.io.IOException;
import java.util.ArrayList;

import javax.swing.plaf.synth.SynthSpinnerUI;

import com.google.gson.Gson;

import model.MFigure;

public class ServerSender extends Thread
{
	ArrayList<SClient> clients;
	ArrayList<String> msg;
	ArrayList<MFigure> figs;
	String lastMessage = "";
	Gson json = new Gson();

	public ServerSender(ArrayList<SClient> clients, ArrayList<String> msg, ArrayList<MFigure> figs)
	{
		this.clients = clients;
		this.figs = figs;
		this.msg = msg;
		start();
	}

	@Override
	public void run()
	{

		try
		{
			while (true)
			{
				for (SClient client : clients)
				{
					if(msg.size() > 0)
					{
						synchronized (msg)
						{
							for (String line : msg)
							{
								String[] lines = line.split(",", 2)
								System.out.println(lines[0]);
//								if(client.id.equals(line.substring(line.indexOf("clientID:") + 1, line.indexOf(","))))
//								{
//									System.out.println("you sending shit");
//								}
//								System.out.println(line);
								line = line.substring(line.indexOf("msg:") + 1);
								client.out.writeUTF(line);
								client.out.flush();
								renewFigs(line);
							}
						}
					}
				}
				if(msg.size() > 0)
				{
					lastMessage = msg.get(msg.size() - 1);
				}		
				msg.clear();
				sleep(100);
			}
		} 
		catch (IOException | InterruptedException e)
		{
			e.printStackTrace();
		}
	}

	public void renewFigs(String msg)
	{
		System.out.println("renewfigs:" + msg);
		figs.add(json.fromJson(msg, MFigure.class));
		for (MFigure fig : figs)
		{
			System.out.println(fig.number);
		}
	}

}
